{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/pages/Home/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport styles from \"./styles\";\nimport { typeVehicles } from \"../../config/constants\";\nimport { VehicleCardPrimary } from \"../../components/VehicleCard\";\nimport { Header } from \"../../components/Header\";\nimport { NextArrowButton } from \"../../components/Buttons/NextArrowButton\";\nimport actions from \"../../actions/todo\";\nimport { useDispatch } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useAuth } from \"../../hooks/auth\";\nimport BtnClose from \"../../components/BtnClose\";\nexport function VehicleSelect() {\n  var _this = this;\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myReports = _useState2[0],\n      setMyReports = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vehicleChoice = _useState4[0],\n      setVehicleChoie = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var handleStart = function handleStart(value) {\n    var dataKey, data, reportsStoraged, reportsFiltered;\n    return _regeneratorRuntime.async(function handleStart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataKey = \"@laudos_user:\" + user.id;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(dataKey));\n\n          case 3:\n            data = _context.sent;\n\n            if (data) {\n              setLoading(true);\n            }\n\n            reportsStoraged = data ? JSON.parse(data) : [];\n\n            if (!reportsStoraged) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(reportsStoraged.filter(function (item) {\n              console.log(item.LaudoVeicular.statusDoLaudo);\n              console.log(item.LaudoVeicular.statusDoLaudo.completo);\n              console.log(item.LaudoVeicular.statusDoLaudo.oculto);\n              item.LaudoVeicular.statusDoLaudo.completo == false && item.LaudoVeicular.statusDoLaudo.oculto == false;\n            }));\n\n          case 9:\n            reportsFiltered = _context.sent;\n\n          case 10:\n            console.log(reportsStoraged.length);\n            setMyReports(reportsFiltered);\n            setLoading(false);\n            setVehicleChoie(value);\n            dispatch(actions.addTypeVehicle(vehicleChoice));\n            setModalVisible(true);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleViewReports = function handleViewReports() {\n    navigation.navigate(\"MyReports\");\n  };\n\n  var handleContinueReport = function handleContinueReport(data) {\n    dispatch(actions.resetDataState(data));\n    setModalVisible(!modalVisible);\n    navigation.navigate(\"NewReport\");\n  };\n\n  var handleNewReport = function handleNewReport() {\n    dispatch(actions.addTypeVehicle(vehicleChoice));\n    navigation.navigate(\"NewReport\");\n  };\n\n  var ModalReport = function ModalReport() {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, React.createElement(BtnClose, {\n      onPress: function onPress() {\n        return setModalVisible(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })), myReports.length > 0 && loading ? React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"Laudos incompletos\"), React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"Clique no qual deseja continuar:\"), React.createElement(View, {\n      style: styles.modalListItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, myReports.map(function (item, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        onPress: function onPress() {\n          return handleContinueReport(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, \" \", React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 27\n        }\n      }, index + 1, \" - \"), item.LaudoVeicular.Data.Cabecalho.Rep));\n    }))) : React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \"Clique para continuar\")), React.createElement(TouchableOpacity, {\n      style: [styles.button, styles.buttonClose],\n      onPress: function onPress() {\n        setModalVisible(!modalVisible);\n        handleNewReport();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.textStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Criar um novo\"))))));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \" Escolha um ve\\xEDculo\")), React.createElement(View, {\n    style: styles.containerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, React.createElement(ModalReport, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.vehicles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, typeVehicles.map(function (_ref, index) {\n    var title = _ref.title,\n        icone = _ref.icone,\n        available = _ref.available;\n    return React.createElement(VehicleCardPrimary, {\n      key: \"VehicleCardPrimary-\" + index,\n      title: title,\n      icone: icone,\n      available: available,\n      onPress: function onPress() {\n        handleStart(title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    });\n  })), React.createElement(NextArrowButton, {\n    title: \"Ver Laudos\",\n    icone: \"upload-cloud\",\n    onPress: handleViewReports,\n    isValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/pages/Home/index.tsx"],"names":["React","useState","useNavigation","styles","typeVehicles","VehicleCardPrimary","Header","NextArrowButton","actions","useDispatch","AsyncStorage","useAuth","BtnClose","VehicleSelect","user","dispatch","myReports","setMyReports","vehicleChoice","setVehicleChoie","modalVisible","setModalVisible","loading","setLoading","navigation","handleStart","value","dataKey","id","getItem","data","reportsStoraged","JSON","parse","filter","item","console","log","LaudoVeicular","statusDoLaudo","completo","oculto","reportsFiltered","length","addTypeVehicle","handleViewReports","navigate","handleContinueReport","resetDataState","handleNewReport","ModalReport","modalView","modalText","modalListItem","map","index","Data","Cabecalho","Rep","button","buttonClose","textStyle","container","title","containerModal","vehicles","cards","icone","available"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Alert, Modal, Text, View, TouchableOpacity } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport styles from \"./styles\";\nimport { typeVehicles } from \"../../config/constants\";\nimport { VehicleCardPrimary } from \"../../components/VehicleCard\";\nimport { Header } from \"../../components/Header\";\nimport { NextArrowButton } from \"../../components/Buttons/NextArrowButton\";\n\nimport actions from \"../../actions/todo\";\n\nimport { useDispatch } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useAuth } from \"../../hooks/auth\";\n\nimport BtnClose from \"../../components/BtnClose\";\n\nexport function VehicleSelect() {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  const [myReports, setMyReports] = useState<any[]>([]);\n  const [vehicleChoice, setVehicleChoie] = useState<any>(\"\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const navigation = useNavigation();\n\n  const handleStart = async (value: string) => {\n    const dataKey = `@laudos_user:${user.id}`;\n    const data = await AsyncStorage.getItem(dataKey);\n    if (data) {\n      setLoading(true);\n    }\n    const reportsStoraged = data ? (JSON.parse(data) as any) : [];\n    let reportsFiltered;\n    if (reportsStoraged) {\n      reportsFiltered = await reportsStoraged.filter((item: any) => {\n        console.log(item.LaudoVeicular.statusDoLaudo);\n        console.log(item.LaudoVeicular.statusDoLaudo.completo);\n        console.log(item.LaudoVeicular.statusDoLaudo.oculto);\n\n        item.LaudoVeicular.statusDoLaudo.completo == false &&\n          item.LaudoVeicular.statusDoLaudo.oculto == false;\n      });\n    }\n    console.log(reportsStoraged.length);\n    setMyReports(reportsFiltered);\n    setLoading(false);\n    setVehicleChoie(value);\n    dispatch(actions.addTypeVehicle(vehicleChoice));\n\n    setModalVisible(true);\n  };\n\n  const handleViewReports = () => {\n    navigation.navigate(\"MyReports\");\n  };\n\n  const handleContinueReport = (data: any) => {\n    dispatch(actions.resetDataState(data));\n    setModalVisible(!modalVisible);\n    navigation.navigate(\"NewReport\");\n  };\n  const handleNewReport = () => {\n    dispatch(actions.addTypeVehicle(vehicleChoice));\n    navigation.navigate(\"NewReport\");\n  };\n\n  const ModalReport = () => {\n    return (\n      <View>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View>\n            <View style={styles.modalView}>\n              <View>\n                <BtnClose onPress={() => setModalVisible(false)} />\n              </View>\n              {myReports.length > 0 && loading ? (\n                <>\n                  <Text style={styles.modalText}>Laudos incompletos</Text>\n                  <Text style={styles.modalText}>\n                    Clique no qual deseja continuar:\n                  </Text>\n\n                  {/* <ScrollView style={styles.modalListItem}> */}\n                  <View style={styles.modalListItem}>\n                    {myReports.map((item: any, index: number) => (\n                      <TouchableOpacity\n                        key={index}\n                        onPress={() => handleContinueReport(item)}\n                      >\n                        <Text>\n                          {\" \"}\n                          <Text>{index + 1} - </Text>\n                          {item.LaudoVeicular.Data.Cabecalho.Rep}\n                        </Text>\n                      </TouchableOpacity>\n                    ))}\n                  </View>\n                </>\n              ) : (\n                <>\n                  <Text style={styles.modalText}>Clique para continuar</Text>\n                </>\n              )}\n              <TouchableOpacity\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => {\n                  setModalVisible(!modalVisible);\n                  handleNewReport();\n                }}\n              >\n                <Text style={styles.textStyle}>Criar um novo</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n      </View>\n    );\n  };\n\n  // useEffect(() => {\n  //   setLoading(true);\n  //   async function loadStorageData() {\n  //     const dataKey = `@laudos_user:${user.id}`;\n  //     const data = await AsyncStorage.getItem(dataKey);\n  //     const reportsStoraged = data ? (JSON.parse(data) as any) : [];\n  //     let reportsFiltered;\n  //     if (reportsStoraged) {\n  //       reportsFiltered = await reportsStoraged.filter(\n  //         (item: any) =>\n  //           item.LaudoVeicular.statusDoLaudo.completo == false &&\n  //           item.LaudoVeicular.statusDoLaudo.oculto == false\n  //       );\n  //     }\n  //     setMyReports(reportsFiltered);\n  //     setLoading(false);\n  //   }\n  //   loadStorageData();\n  // }, []);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View>\n          <Header></Header>\n        </View>\n\n        <View>\n          <Text style={styles.title}> Escolha um veículo</Text>\n        </View>\n        <View style={styles.containerModal}>\n          <ModalReport />\n        </View>\n\n        <View style={styles.vehicles}>\n          <View style={styles.cards}>\n            {typeVehicles.map(({ title, icone, available }, index) => (\n              <VehicleCardPrimary\n                key={`VehicleCardPrimary-${index}`}\n                title={title}\n                icone={icone}\n                available={available}\n                onPress={() => {\n                  handleStart(title);\n                }}\n              />\n            ))}\n          </View>\n          <NextArrowButton\n            title=\"Ver Laudos\"\n            icone=\"upload-cloud\"\n            onPress={handleViewReports}\n            isValid={true}\n          />\n        </View>\n      </View>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}