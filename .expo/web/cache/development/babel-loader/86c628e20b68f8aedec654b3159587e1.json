{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/pages/Login/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { useAuth } from \"../../hooks/auth\";\nimport styles from \"./styles\";\nimport ImageLogo from \"../../assets/logo-policiacientifica.png\";\nimport { InputLogin } from \"../../components/Inputs/InputLogin/Index\";\nexport function Login() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useAuth = useAuth(),\n      signIn = _useAuth.signIn,\n      signOut = _useAuth.signOut;\n\n  function handleSignIn() {\n    return _regeneratorRuntime.async(function handleSignIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signIn(name, password));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"Usário ou senha inválida! Tente novamente com outras credênciais\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: ImageLogo,\n    style: styles.image,\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.boxInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(InputLogin, {\n    testID: \"input-usuario\",\n    placeholder: \"Usu\\xE1rio\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    defaultValue: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(InputLogin, {\n    testID: \"input-senha\",\n    placeholder: \"Senha\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    defaultValue: password,\n    value: password,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    activeOpacity: 0.7,\n    onPress: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Entrar\")));\n}","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/pages/Login/index.tsx"],"names":["React","useState","useNavigation","useAuth","styles","ImageLogo","InputLogin","Login","navigation","name","setName","password","setPassword","signIn","signOut","handleSignIn","Alert","alert","container","image","boxInputs","button","buttonText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT;AACA,OAAOC,MAAP;AAEA,OAAOC,SAAP;AAEA,SAASC,UAAT;AAEA,OAAO,SAASC,KAAT,GAAiB;AACtB,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AAEA,kBAAwBD,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,iBAA4BT,OAAO,EAAnC;AAAA,MAAQU,MAAR,YAAQA,MAAR;AAAA,MAAgBC,OAAhB,YAAgBA,OAAhB;;AAEA,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUF,MAAM,CAACJ,IAAD,EAAOE,QAAP,CAFhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIIK,YAAAA,KAAK,CAACC,KAAN,CACE,kEADF;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEb,SAAf;AAA0B,IAAA,KAAK,EAAED,MAAM,CAACe,KAAxC;AAA+C,IAAA,UAAU,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAC,eADT;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,YAAY,EAAE,sBAACX,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA,KAHhB;AAIE,IAAA,YAAY,EAAEA,IAJhB;AAKE,IAAA,KAAK,EAAEA,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAC,aADT;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,YAAY,EAAE,sBAACE,QAAD;AAAA,aAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,KAHhB;AAIE,IAAA,YAAY,EAAEA,QAJhB;AAKE,IAAA,KAAK,EAAEA,QALT;AAME,IAAA,eAAe,EAAE,IANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,EAmBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACiB,MADhB;AAEE,IAAA,aAAa,EAAE,GAFjB;AAGE,IAAA,OAAO,EAAEN,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACkB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAnBF,CADF;AA8BD","sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, Image, TouchableOpacity, Alert } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { useAuth } from \"../../hooks/auth\";\nimport styles from \"./styles\";\n\nimport ImageLogo from \"../../assets/logo-policiacientifica.png\";\n\nimport { InputLogin } from \"../../components/Inputs/InputLogin/Index\";\n\nexport function Login() {\n  const navigation = useNavigation();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const { signIn, signOut } = useAuth();\n\n  async function handleSignIn() {\n    try {\n      await signIn(name, password);\n    } catch (error) {\n      Alert.alert(\n        \"Usário ou senha inválida! Tente novamente com outras credênciais\"\n      );\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Image source={ImageLogo} style={styles.image} resizeMode=\"contain\" />\n      <View style={styles.boxInputs}>\n        <InputLogin\n          testID=\"input-usuario\"\n          placeholder=\"Usuário\"\n          onChangeText={(name) => setName(name)}\n          defaultValue={name}\n          value={name}\n        />\n        <InputLogin\n          testID=\"input-senha\"\n          placeholder=\"Senha\"\n          onChangeText={(password) => setPassword(password)}\n          defaultValue={password}\n          value={password}\n          secureTextEntry={true}\n        />\n      </View>\n      <TouchableOpacity\n        style={styles.button}\n        activeOpacity={0.7}\n        onPress={handleSignIn}\n      >\n        <Text style={styles.buttonText}>Entrar</Text>\n      </TouchableOpacity>\n      {/* <Text style={styles.text}>Esqueceu a senha?</Text> */}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}