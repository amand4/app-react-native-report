{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/hooks/auth.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { api } from \"../services/api\";\nimport { useDispatch } from \"react-redux\";\nimport useAsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport actions from \"../actions/todo\";\nvar AuthContext = createContext({});\n\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var dispatch = useDispatch();\n  var userStorageKey = \"@AppAuth:user\";\n  var tokenStorageKey = \"@AppAuth:token\";\n  useEffect(function () {\n    function loadStoragedData() {\n      var storagedUser, storagedToken;\n      return _regeneratorRuntime.async(function loadStoragedData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(useAsyncStorage.getItem(userStorageKey));\n\n            case 2:\n              storagedUser = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(useAsyncStorage.getItem(\"@AppAuth:token\"));\n\n            case 5:\n              storagedToken = _context.sent;\n\n              if (storagedUser && storagedToken) {\n                api.defaults.headers[\"Authorization\"] = \"Bearer \" + storagedToken;\n                setUser(JSON.parse(storagedUser));\n                setLoading(false);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadStoragedData();\n  }, []);\n\n  function signIn(name, password) {\n    var response;\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(api.post(\"/login\", {\n              name: name,\n              password: password\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n            if (!response.data.user) {\n              _context2.next = 12;\n              break;\n            }\n\n            setUser(response.data.user);\n            dispatch(actions.addExpert(Number(response.data.user.id)));\n            api.defaults.headers[\"Authorization\"] = \"Bearer \" + response.data.token;\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(useAsyncStorage.setItem(userStorageKey, JSON.stringify(response.data.user)));\n\n          case 10:\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(useAsyncStorage.setItem(tokenStorageKey, JSON.stringify(response.data.token)));\n\n          case 12:\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw new Error(\"Usário ou senha inválida! Tente novamente com outras credênciais\");\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  }\n\n  function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setUser({});\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(userStorageKey).then(function () {}));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user: user,\n      loading: loading,\n      signIn: signIn,\n      signOut: signOut\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction useAuth() {\n  var context = useContext(AuthContext);\n  return context;\n}\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/hooks/auth.tsx"],"names":["React","createContext","useContext","useState","useEffect","api","useDispatch","useAsyncStorage","AsyncStorage","actions","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","dispatch","userStorageKey","tokenStorageKey","loadStoragedData","getItem","storagedUser","storagedToken","defaults","headers","JSON","parse","signIn","name","password","post","response","data","addExpert","Number","id","token","setItem","stringify","Error","signOut","removeItem","then","signed","useAuth","context"],"mappings":"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","sourcesContent":["import React, {\n  ReactNode,\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n} from \"react\";\nimport { api } from \"../services/api\";\nimport { AxiosResponse } from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport useAsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport actions from \"../actions/todo\";\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\ninterface Response {\n  token: string;\n  user?: User;\n}\ninterface User {\n  id: string;\n  name: string;\n  password: string;\n}\ninterface CallbackType {\n  onError: (value: string) => void;\n  onSuccess: (value: Record<string, any>) => void;\n}\n\ninterface IAuthContextData {\n  signed: boolean;\n  user: User;\n  loading: boolean;\n  signIn(name: string, password: string): Promise<AxiosResponse>;\n  signOut(): void;\n}\nconst AuthContext = createContext<IAuthContextData>({} as IAuthContextData);\n\nfunction AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User>({} as User);\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n\n  const userStorageKey = \"@AppAuth:user\";\n  const tokenStorageKey = \"@AppAuth:token\";\n\n  useEffect(() => {\n    async function loadStoragedData() {\n      //trocar por multget\n      const storagedUser = await useAsyncStorage.getItem(userStorageKey);\n\n      const storagedToken = await useAsyncStorage.getItem(\"@AppAuth:token\");\n\n      if (storagedUser && storagedToken) {\n        api.defaults.headers[\"Authorization\"] = `Bearer ${storagedToken}`;\n\n        setUser(JSON.parse(storagedUser));\n        setLoading(false);\n      }\n    }\n\n    loadStoragedData();\n  }, []);\n\n  async function signIn(name: string, password: string): Promise<void> {\n    try {\n      // trocar pelos parametro da funçao, apenas testes\n      const response = await api.post<Response>(\"/login\", {\n        name,\n        password,\n      });\n      if (response.data.user) {\n        setUser(response.data.user);\n        dispatch(actions.addExpert(Number(response.data.user.id)));\n\n        api.defaults.headers[\"Authorization\"] = `Bearer ${response.data.token}`;\n\n        await useAsyncStorage.setItem(\n          userStorageKey,\n          JSON.stringify(response.data.user)\n        );\n        await useAsyncStorage.setItem(\n          tokenStorageKey,\n          JSON.stringify(response.data.token)\n        );\n      }\n    } catch (error) {\n      throw new Error(\n        \"Usário ou senha inválida! Tente novamente com outras credênciais\"\n      );\n    }\n  }\n\n  async function signOut() {\n    setUser({} as User);\n    await AsyncStorage.removeItem(userStorageKey).then(() => {});\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ signed: !!user, user, loading, signIn, signOut }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}