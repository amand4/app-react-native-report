{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/components/Inputs/Input/index.tsx\";\nvar _excluded = [\"placeholder\", \"value\", \"error\", \"errorMessage\", \"keyboardType\", \"maxLength\", \"autoCapitalize\", \"autoCorrect\", \"defaultValue\", \"editable\", \"testID\"];\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport colors from \"../../../styles/colors\";\nimport styles from \"./styles\";\nexport function Input(_ref) {\n  var placeholder = _ref.placeholder,\n      value = _ref.value,\n      error = _ref.error,\n      errorMessage = _ref.errorMessage,\n      keyboardType = _ref.keyboardType,\n      maxLength = _ref.maxLength,\n      autoCapitalize = _ref.autoCapitalize,\n      autoCorrect = _ref.autoCorrect,\n      defaultValue = _ref.defaultValue,\n      editable = _ref.editable,\n      testID = _ref.testID,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(React.Fragment, null, error && errorMessage && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, errorMessage, \" \"), React.createElement(TextInput, _extends({\n    style: error ? styles.inputInvalid : styles.input,\n    placeholder: placeholder,\n    placeholderTextColor: colors.text,\n    value: value,\n    editable: editable,\n    maxLength: maxLength,\n    keyboardType: keyboardType,\n    autoCapitalize: autoCapitalize,\n    autoCorrect: autoCorrect,\n    defaultValue: defaultValue,\n    testID: testID\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/components/Inputs/Input/index.tsx"],"names":["React","colors","styles","Input","placeholder","value","error","errorMessage","keyboardType","maxLength","autoCapitalize","autoCorrect","defaultValue","editable","testID","rest","inputInvalid","input","text"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AAiBA,OAAO,SAASC,KAAT,OAaQ;AAAA,MAZbC,WAYa,QAZbA,WAYa;AAAA,MAXbC,KAWa,QAXbA,KAWa;AAAA,MAVbC,KAUa,QAVbA,KAUa;AAAA,MATbC,YASa,QATbA,YASa;AAAA,MARbC,YAQa,QARbA,YAQa;AAAA,MAPbC,SAOa,QAPbA,SAOa;AAAA,MANbC,cAMa,QANbA,cAMa;AAAA,MALbC,WAKa,QALbA,WAKa;AAAA,MAJbC,YAIa,QAJbA,YAIa;AAAA,MAHbC,QAGa,QAHbA,QAGa;AAAA,MAFbC,MAEa,QAFbA,MAEa;AAAA,MADVC,IACU;;AACb,SACE,0CACGT,KAAK,IAAIC,YAAT,IACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,YAAnC,MAFJ,EAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAED,KAAK,GAAGJ,MAAM,CAACc,YAAV,GAAyBd,MAAM,CAACe,KAD9C;AAEE,IAAA,WAAW,EAAEb,WAFf;AAGE,IAAA,oBAAoB,EAAEH,MAAM,CAACiB,IAH/B;AAIE,IAAA,KAAK,EAAEb,KAJT;AAKE,IAAA,QAAQ,EAAEQ,QALZ;AAME,IAAA,SAAS,EAAEJ,SANb;AAOE,IAAA,YAAY,EAAED,YAPhB;AAQE,IAAA,cAAc,EAAEE,cARlB;AASE,IAAA,WAAW,EAAEC,WATf;AAUE,IAAA,YAAY,EAAEC,YAVhB;AAWE,IAAA,MAAM,EAAEE;AAXV,KAYMC,IAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,CADF;AAsBD","sourcesContent":["import React from \"react\";\nimport { Text, TextInput } from \"react-native\";\nimport colors from \"../../../styles/colors\";\nimport styles from \"./styles\";\n\ninterface InputProps {\n  placeholder: string;\n  value: any;\n  onChangeText: (newValue: any) => void;\n  error?: boolean;\n  errorMessage?: any;\n  keyboardType?: any;\n  maxLength?: number;\n  autoCapitalize?: any;\n  autoCorrect?: boolean;\n  defaultValue?: any;\n  editable?: boolean;\n  testID?: string;\n}\n\nexport function Input({\n  placeholder,\n  value,\n  error,\n  errorMessage,\n  keyboardType,\n  maxLength,\n  autoCapitalize,\n  autoCorrect,\n  defaultValue,\n  editable,\n  testID,\n  ...rest\n}: InputProps) {\n  return (\n    <>\n      {error && errorMessage && (\n        <Text style={styles.errorMessage}>{errorMessage} </Text>\n      )}\n\n      <TextInput\n        style={error ? styles.inputInvalid : styles.input}\n        placeholder={placeholder}\n        placeholderTextColor={colors.text}\n        value={value}\n        editable={editable}\n        maxLength={maxLength}\n        keyboardType={keyboardType}\n        autoCapitalize={autoCapitalize}\n        autoCorrect={autoCorrect}\n        defaultValue={defaultValue}\n        testID={testID}\n        {...rest}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}