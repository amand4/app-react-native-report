{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/pages/Home/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport styles from \"./styles\";\nimport { typeVehicles } from \"../../config/constants\";\nimport { VehicleCardPrimary } from \"../../components/VehicleCard\";\nimport { Header } from \"../../components/Header\";\nimport { NextArrowButton } from \"../../components/Buttons/NextArrowButton\";\nimport actions from \"../../actions/todo\";\nimport { useDispatch } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useAuth } from \"../../hooks/auth\";\nimport BtnClose from \"../../components/BtnClose\";\nexport function VehicleSelect() {\n  var _this = this;\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myReports = _useState2[0],\n      setMyReports = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vehicleChoice = _useState4[0],\n      setVehicleChoie = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      reportsFiltered = _useState8[0],\n      setReportsFiltered = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var handleStart = function handleStart(value) {\n    var dataKey, data, reportsFiltered, reportsStoraged;\n    return _regeneratorRuntime.async(function handleStart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataKey = \"@laudos_user:\" + user.id;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(dataKey));\n\n          case 3:\n            data = _context.sent;\n\n            if (data) {\n              reportsStoraged = JSON.parse(data);\n              reportsFiltered = reportsStoraged.filter(function (currentElement) {\n                if (currentElement.LaudoVeicular.statusDoLaudo.completo == false && currentElement.LaudoVeicular.statusDoLaudo.oculto == false) {\n                  return true;\n                }\n              });\n              console.log(reportsStoraged.filter(function (item) {\n                return item.LaudoVeicular.statusDoLaudo.completo == false && item.LaudoVeicular.statusDoLaudo.oculto == false;\n              }));\n              setMyReports(reportsFiltered);\n            }\n\n            setVehicleChoie(value);\n            dispatch(actions.addTypeVehicle(vehicleChoice));\n\n            if (!(myReports.length > 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setModalVisible(true));\n\n          case 9:\n            return _context.abrupt(\"return\", navigation.navigate(\"MyReports\"));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleViewReports = function handleViewReports() {\n    navigation.navigate(\"MyReports\");\n  };\n\n  var handleContinueReport = function handleContinueReport(data) {\n    dispatch(actions.resetDataState(data));\n    setModalVisible(!modalVisible);\n    navigation.navigate(\"NewReport\");\n  };\n\n  var handleNewReport = function handleNewReport() {\n    dispatch(actions.addTypeVehicle(vehicleChoice));\n    navigation.navigate(\"NewReport\");\n  };\n\n  var ModalReport = function ModalReport() {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, React.createElement(BtnClose, {\n      onPress: function onPress() {\n        return setModalVisible(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    })), myReports.length > 0 ? React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, \"Laudos incompletos\"), React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"Clique no qual deseja continuar:\"), React.createElement(View, {\n      style: styles.modalListItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, myReports.map(function (item, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        onPress: function onPress() {\n          return handleContinueReport(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, \" \", React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 27\n        }\n      }, index + 1, \" - \"), item.LaudoVeicular.Data.Cabecalho.Rep));\n    }))) : React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, \"Clique para continuar\")), React.createElement(TouchableOpacity, {\n      style: [styles.button, styles.buttonClose],\n      onPress: function onPress() {\n        setModalVisible(!modalVisible);\n        handleNewReport();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.textStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Criar um novo\"))))));\n  };\n\n  useEffect(function () {\n    function loadStorageData() {\n      return _regeneratorRuntime.async(function loadStorageData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadStorageData();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \" Escolha um ve\\xEDculo\")), React.createElement(View, {\n    style: styles.containerModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(ModalReport, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.vehicles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, typeVehicles.map(function (_ref, index) {\n    var title = _ref.title,\n        icone = _ref.icone,\n        available = _ref.available;\n    return React.createElement(VehicleCardPrimary, {\n      key: \"VehicleCardPrimary-\" + index,\n      title: title,\n      icone: icone,\n      available: available,\n      onPress: function onPress() {\n        handleStart(title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    });\n  })), React.createElement(NextArrowButton, {\n    title: \"Ver Laudos\",\n    icone: \"upload-cloud\",\n    onPress: handleViewReports,\n    isValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/pages/Home/index.tsx"],"names":["React","useState","useEffect","useNavigation","styles","typeVehicles","VehicleCardPrimary","Header","NextArrowButton","actions","useDispatch","AsyncStorage","useAuth","BtnClose","VehicleSelect","user","dispatch","myReports","setMyReports","vehicleChoice","setVehicleChoie","modalVisible","setModalVisible","reportsFiltered","setReportsFiltered","navigation","handleStart","value","dataKey","id","getItem","data","reportsStoraged","JSON","parse","filter","currentElement","LaudoVeicular","statusDoLaudo","completo","oculto","console","log","item","addTypeVehicle","length","navigate","handleViewReports","handleContinueReport","resetDataState","handleNewReport","ModalReport","modalView","modalText","modalListItem","map","index","Data","Cabecalho","Rep","button","buttonClose","textStyle","loadStorageData","container","title","containerModal","vehicles","cards","icone","available"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Alert, Modal, Text, View, TouchableOpacity } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport styles from \"./styles\";\nimport { typeVehicles } from \"../../config/constants\";\nimport { VehicleCardPrimary } from \"../../components/VehicleCard\";\nimport { Header } from \"../../components/Header\";\nimport { NextArrowButton } from \"../../components/Buttons/NextArrowButton\";\n\nimport actions from \"../../actions/todo\";\n\nimport { useDispatch } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useAuth } from \"../../hooks/auth\";\n\nimport BtnClose from \"../../components/BtnClose\";\n\nexport function VehicleSelect() {\n  const { user } = useAuth();\n\n  const dispatch = useDispatch();\n  const [myReports, setMyReports] = useState<any[]>([]);\n  const [vehicleChoice, setVehicleChoie] = useState<any>(\"\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const [reportsFiltered, setReportsFiltered] = useState<any[]>([]);\n\n  const navigation = useNavigation();\n\n  const handleStart = async (value: string) => {\n    const dataKey = `@laudos_user:${user.id}`;\n    const data = await AsyncStorage.getItem(dataKey);\n    let reportsFiltered;\n    if (data) {\n      const reportsStoraged = JSON.parse(data);\n      reportsFiltered = reportsStoraged.filter(function (currentElement: any) {\n        if (\n          currentElement.LaudoVeicular.statusDoLaudo.completo == false &&\n          currentElement.LaudoVeicular.statusDoLaudo.oculto == false\n        ) {\n          return true;\n        }\n      });\n      // let filteredNumbers = numbers.filter(function (currentElement) {\n      //   if (currentElement > 3 && currentElement < 17) {\n      //     return true;\n      //   }\n\n      console.log(\n        reportsStoraged.filter((item: any) => {\n          return (\n            item.LaudoVeicular.statusDoLaudo.completo == false &&\n            item.LaudoVeicular.statusDoLaudo.oculto == false\n          );\n        })\n      );\n\n      setMyReports(reportsFiltered);\n    }\n\n    setVehicleChoie(value);\n    dispatch(actions.addTypeVehicle(vehicleChoice));\n\n  if (myReports.length > 0) {\n   return setModalVisible(true);\n    \n  }\n  return navigation.navigate(\"MyReports\") ;\n  }\n  const handleViewReports = () => {\n    navigation.navigate(\"MyReports\");\n  };\n\n  const handleContinueReport = (data: any) => {\n    dispatch(actions.resetDataState(data));\n    setModalVisible(!modalVisible);\n    navigation.navigate(\"NewReport\");\n  };\n  const handleNewReport = () => {\n    dispatch(actions.addTypeVehicle(vehicleChoice));\n    navigation.navigate(\"NewReport\");\n  };\n\n  const ModalReport = () => {\n    return (\n      <View>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View>\n            <View style={styles.modalView}>\n              <View>\n                <BtnClose onPress={() => setModalVisible(false)} />\n              </View>\n              {myReports.length > 0 ? (\n                <>\n                  <Text style={styles.modalText}>Laudos incompletos</Text>\n                  <Text style={styles.modalText}>\n                    Clique no qual deseja continuar:\n                  </Text>\n\n                  {/* <ScrollView style={styles.modalListItem}> */}\n                  <View style={styles.modalListItem}>\n                    {myReports.map((item: any, index: number) => (\n                      <TouchableOpacity\n                        key={index}\n                        onPress={() => handleContinueReport(item)}\n                      >\n                        <Text>\n                          {\" \"}\n                          <Text>{index + 1} - </Text>\n                          {item.LaudoVeicular.Data.Cabecalho.Rep}\n                        </Text>\n                      </TouchableOpacity>\n                    ))}\n                  </View>\n                </>\n              ) : (\n                <>\n                  <Text style={styles.modalText}>Clique para continuar</Text>\n                </>\n              )}\n              <TouchableOpacity\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => {\n                  setModalVisible(!modalVisible);\n                  handleNewReport();\n                }}\n              >\n                <Text style={styles.textStyle}>Criar um novo</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    async function loadStorageData() {}\n    loadStorageData();\n  }, []);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View>\n          <Header></Header>\n        </View>\n\n        <View>\n          <Text style={styles.title}> Escolha um veículo</Text>\n        </View>\n        <View style={styles.containerModal}>\n          <ModalReport />\n        </View>\n\n        <View style={styles.vehicles}>\n          <View style={styles.cards}>\n            {typeVehicles.map(({ title, icone, available }, index) => (\n              <VehicleCardPrimary\n                key={`VehicleCardPrimary-${index}`}\n                title={title}\n                icone={icone}\n                available={available}\n                onPress={() => {\n                  handleStart(title);\n                }}\n              />\n            ))}\n          </View>\n          <NextArrowButton\n            title=\"Ver Laudos\"\n            icone=\"upload-cloud\"\n            onPress={handleViewReports}\n            isValid={true}\n          />\n        </View>\n      </View>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}