{"ast":null,"code":"var _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/components/Select/index.tsx\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport styles from \"./style\";\nexport function Select(_ref) {\n  var _this = this;\n\n  var options = _ref.options,\n      value = _ref.value,\n      error = _ref.error,\n      errorMessage = _ref.errorMessage,\n      testID = _ref.testID,\n      _onValueChange = _ref.onValueChange;\n  return React.createElement(React.Fragment, null, error && errorMessage && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, errorMessage, \" \"), React.createElement(View, {\n    style: error ? styles.selectInvalid : styles.containerSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker, {\n    style: styles.select,\n    selectedValue: value,\n    testID: testID,\n    onValueChange: function onValueChange(value, index) {\n      _onValueChange(value, index);\n    },\n    itemStyle: {\n      backgroundColor: \"grey\",\n      color: \"blue\",\n      fontFamily: \"Ebrima\",\n      fontSize: 17\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, options.map(function (value, index) {\n    return React.createElement(Picker.Item, {\n      key: index,\n      label: value.label,\n      value: index,\n      testID: \"select-option\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/components/Select/index.tsx"],"names":["React","Picker","styles","Select","options","value","error","errorMessage","testID","onValueChange","selectInvalid","containerSelect","select","index","backgroundColor","color","fontFamily","fontSize","map","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,OAAOC,MAAP;AAgBA,OAAO,SAASC,MAAT,OAOS;AAAA;;AAAA,MANdC,OAMc,QANdA,OAMc;AAAA,MALdC,KAKc,QALdA,KAKc;AAAA,MAJdC,KAIc,QAJdA,KAIc;AAAA,MAHdC,YAGc,QAHdA,YAGc;AAAA,MAFdC,MAEc,QAFdA,MAEc;AAAA,MADdC,cACc,QADdA,aACc;AACd,SACE,0CACGH,KAAK,IAAIC,YAAT,IACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,YAAnC,MAFJ,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,KAAK,GAAGJ,MAAM,CAACQ,aAAV,GAA0BR,MAAM,CAACS,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACU,MADhB;AAEE,IAAA,aAAa,EAAEP,KAFjB;AAGE,IAAA,MAAM,EAAEG,MAHV;AAIE,IAAA,aAAa,EAAE,uBAACH,KAAD,EAAQQ,KAAR,EAAkB;AAC/BJ,MAAAA,cAAa,CAACJ,KAAD,EAAQQ,KAAR,CAAb;AACD,KANH;AAOE,IAAA,SAAS,EAAE;AAAEC,MAAAA,eAAe,EAAE,MAAnB;AAA2BC,MAAAA,KAAK,EAAE,MAAlC;AAA0CC,MAAAA,UAAU,EAAE,QAAtD;AAAgEC,MAAAA,QAAQ,EAAE;AAA1E,KAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGb,OAAO,CAACc,GAAR,CAAY,UAACb,KAAD,EAAQQ,KAAR;AAAA,WACX,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,GAAG,EAAEA,KAAlB;AAAyB,MAAA,KAAK,EAAER,KAAK,CAACc,KAAtC;AAA6C,MAAA,KAAK,EAAEN,KAApD;AAA2D,MAAA,MAAM,EAAE,eAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CAVH,CADF,CAJF,CADF;AAuBD","sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { Picker } from \"@react-native-picker/picker\";\n\nimport styles from \"./style\";\n\ntype OptionType = {\n  value: string;\n  label: string;\n};\n\ninterface SelectProps {\n  options: Array<OptionType>;\n  value: string | number;\n  onValueChange: (newValue: string | number, itemIndex: number) => void;\n  error?: boolean;\n  errorMessage?: String;\n  testID: string\n}\n\nexport function Select({\n  options,\n  value,\n  error,\n  errorMessage,\n  testID,\n  onValueChange,\n}: SelectProps) {\n  return (\n    <>\n      {error && errorMessage && (\n        <Text style={styles.errorMessage}>{errorMessage} </Text>\n      )}\n      <View style={error ? styles.selectInvalid : styles.containerSelect}>\n        <Picker\n          style={styles.select}\n          selectedValue={value}\n          testID={testID}\n          onValueChange={(value, index) => {\n            onValueChange(value, index);\n          }}\n          itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily: \"Ebrima\", fontSize: 17 }}\n\n        >\n          {options.map((value, index) => (\n            <Picker.Item key={index} label={value.label} value={index} testID={\"select-option\"} />\n          ))}\n        </Picker>\n      </View>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}