{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/components/Form/Steps/StepOneGeneralInformation/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport { useAuth } from \"../../../../hooks/auth\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport styles from \"./styles\";\nimport { Input } from \"../../../Inputs/Input\";\nimport { NextArrowButton } from \"../../../../components/Buttons/NextArrowButton\";\nimport { BackArrowButton } from \"../../../../components/Buttons/BackArrowButton\";\nimport { Select } from \"../../../Select\";\nimport { typeInquerisOptions, orgaoSolicitanteOptions, directorsOptions, cities, naturezaExame, secao } from \"../../../../config/constants\";\nimport { formatEditDate, formatNewDate } from \"../../../../utils\";\nimport { inputIsValid, selectIsValid } from \"../../../../utils/validate\";\nimport actions from \"../../../../actions/todo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport function StepOneGeneralInformation() {\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var reportDataHeader = useSelector(function (state) {\n    return state.reportReducer.LaudoVeicular.Data.Cabecalho;\n  });\n  var currentStep = useSelector(function (state) {\n    return state.reportReducer.currentStep;\n  });\n\n  var setCurrentStep = function setCurrentStep(value) {\n    dispatch(actions.updateCurrentStep(value));\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      rep = _useState2[0],\n      setRep = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      numberOffice = _useState4[0],\n      setNumberOffice = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      initiated = _useState6[0],\n      setInitiated = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      typeOfInquiry = _useState8[0],\n      setTypeOfInquiry = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      NumberInquiry = _useState10[0],\n      setNumberInquiry = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      city = _useState12[0],\n      setCity = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      director = _useState14[0],\n      setDirector = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      section = _useState16[0],\n      setSection = _useState16[1];\n\n  var _useState17 = useState(user.id),\n      _useState18 = _slicedToArray(_useState17, 2),\n      expert = _useState18[0],\n      setExpert = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      examNature = _useState20[0],\n      setExamNature = _useState20[1];\n\n  var _useState21 = useState(new Date()),\n      _useState22 = _slicedToArray(_useState21, 2),\n      dateDesignation = _useState22[0],\n      setDateDesignation = _useState22[1];\n\n  var _useState23 = useState(new Date()),\n      _useState24 = _slicedToArray(_useState23, 2),\n      dateRequest = _useState24[0],\n      setDateRequest = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      requestingAgency = _useState26[0],\n      setRequestingAgency = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      modalVisible = _useState28[0],\n      setModalVisible = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      showDateDesig = _useState30[0],\n      setShowDateDesignacao = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      showDateSolit = _useState32[0],\n      setShowSolitacao = _useState32[1];\n\n  var _useState33 = useState(true),\n      _useState34 = _slicedToArray(_useState33, 2),\n      isValid = _useState34[0],\n      setValid = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      validateCity = _useState36[0],\n      setValidateCity = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      validateSection = _useState38[0],\n      setValidateSection = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      validateExamNature = _useState40[0],\n      setValidateExamNature = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      validateRequestingAgency = _useState42[0],\n      setValidateRequestingAgency = _useState42[1];\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      validateDirector = _useState44[0],\n      setValidateDirector = _useState44[1];\n\n  var _useState45 = useState(false),\n      _useState46 = _slicedToArray(_useState45, 2),\n      validateTypeInquery = _useState46[0],\n      setValidateTypeInquery = _useState46[1];\n\n  var nextStep = function nextStep() {\n    if (rep && numberOffice && initiated !== \"\" || typeOfInquiry && city && director && section && examNature && requestingAgency !== 0 && isValid) {\n      setCurrentStep(2);\n    } else {\n      Alert.alert(\"Ops, informações inválidas!\", \"Verique se preencheu todas as informações desta etapa corretamente.\", [{\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n    }\n  };\n\n  var previousStep = function previousStep() {\n    Alert.alert(\"Tem certeza que seja encerrar o formulário?\", \"Será redirecionado para tela inicial.\", [{\n      text: \"Cancelar\",\n      style: \"cancel\"\n    }, {\n      text: \"Não\"\n    }, {\n      text: \"Sim\",\n      onPress: function onPress() {\n        return _regeneratorRuntime.async(function onPress$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                navigation.navigate(\"VehicleSelect\");\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }]);\n  };\n\n  var showDesignacaoDatepicker = function showDesignacaoDatepicker() {\n    setShowDateDesignacao(true);\n  };\n\n  var showSolicitanteDatepicker = function showSolicitanteDatepicker() {\n    setShowSolitacao(true);\n  };\n\n  return React.createElement(TouchableNativeFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.fields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Rep (xxxx) *\",\n    error: inputIsValid(rep),\n    errorMessage: \"Erro: o formato deve ser: Rep (xxxx)\",\n    value: String(reportDataHeader.Rep),\n    onChangeText: function onChangeText(value) {\n      var repConvertNumber = Number(value);\n      setRep(value);\n      dispatch(actions.addRep(repConvertNumber));\n    },\n    testID: \"input-rep\",\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Of\\xEDcio **\",\n    errorMessage: \"Erro: o número do Ofício é obrigatório\",\n    error: inputIsValid(numberOffice),\n    onChangeText: function onChangeText(value) {\n      var numberOfficeConvert = Number(value);\n      setNumberOffice(value);\n      dispatch(actions.addNumberOffice(numberOfficeConvert));\n    },\n    value: String(numberOffice),\n    keyboardType: \"numeric\",\n    testID: \"input-office\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Indiciado\",\n    errorMessage: \"Erro: preencha o nome  do indiciado\",\n    error: inputIsValid(initiated),\n    autoCapitalize: \"words\",\n    onChangeText: function onChangeText(value) {\n      setInitiated(value);\n      dispatch(actions.addInitiated(value));\n    },\n    value: initiated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), React.createElement(Select, {\n    onValueChange: function onValueChange(selectedValue, index) {\n      setTypeOfInquiry(index);\n      dispatch(actions.addTypeOfInquiry(index));\n      setValidateTypeInquery(selectIsValid(index));\n    },\n    options: typeInquerisOptions,\n    value: typeOfInquiry,\n    error: validateTypeInquery,\n    errorMessage: \"Erro: Selecione o Tipo de Inquerito\",\n    testID: \"select-typeOfInquery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Inquerito\",\n    error: inputIsValid(NumberInquiry),\n    errorMessage: \"Erro: preencha o número do Inquerito\",\n    onChangeText: function onChangeText(value) {\n      setNumberInquiry(value);\n      dispatch(actions.addNumberInquiry(Number(value)));\n    },\n    value: String(NumberInquiry),\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), React.createElement(Select, {\n    onValueChange: function onValueChange(selectedValue, index) {\n      setCity(index);\n      dispatch(actions.addCity(index));\n      setValidateCity(selectIsValid(index));\n    },\n    options: cities,\n    value: city,\n    error: validateCity,\n    errorMessage: \"Erro: Selecione uma Cidade\",\n    testID: \"select-city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }), React.createElement(Select, {\n    onValueChange: function onValueChange(selectedValue, index) {\n      setSection(index);\n      dispatch(actions.addSection(index));\n      setValidateSection(selectIsValid(index));\n    },\n    options: secao,\n    value: section,\n    error: validateSection,\n    errorMessage: \"Erro: Selecione uma Seção\",\n    testID: \"select-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }), React.createElement(Select, {\n    onValueChange: function onValueChange(selectedValue, index) {\n      setExamNature(index);\n      dispatch(actions.addExamNature(index));\n      setValidateExamNature(selectIsValid(index));\n    },\n    options: naturezaExame,\n    value: examNature,\n    error: validateExamNature,\n    errorMessage: \"Erro: Selecione a Natureza de Exame\",\n    testID: \"select-natureExam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }), React.createElement(Select, {\n    onValueChange: function onValueChange(selectedValue, index) {\n      setRequestingAgency(index);\n      dispatch(actions.addRequestingAgency(index));\n      setValidateRequestingAgency(selectIsValid(index));\n    },\n    options: orgaoSolicitanteOptions,\n    value: requestingAgency,\n    error: validateRequestingAgency,\n    errorMessage: \"Erro: Selecione um Órgão Solicitante\",\n    testID: \"select-typeRequestingAgency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }), React.createElement(Select, {\n    onValueChange: function onValueChange(selectedValue, index) {\n      setDirector(index);\n      dispatch(actions.addDirector(index));\n      setValidateDirector(selectIsValid(index));\n    },\n    options: directorsOptions,\n    value: director,\n    error: validateDirector,\n    errorMessage: \"Erro: Selecione um Diretor\",\n    testID: \"select-director\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.containerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, React.createElement(RectButton, {\n    style: styles.button,\n    onPress: showSolicitanteDatepicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, typeof reportDataHeader.DataDeSolicitacao === \"string\" ? React.createElement(Text, {\n    style: styles.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, formatEditDate(reportDataHeader.DataDeSolicitacao)) : React.createElement(Text, {\n    style: styles.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, formatNewDate(reportDataHeader.DataDeSolicitacao)))), React.createElement(View, {\n    style: styles.containerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, React.createElement(RectButton, {\n    style: styles.button,\n    onPress: showDesignacaoDatepicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, formatNewDate(reportDataHeader.DataDeDesignacao)))), showDateSolit && React.createElement(DateTimePicker, {\n    testID: \"dateTimePickerSolicitacao\",\n    value: dateRequest,\n    is24Hour: true,\n    display: \"default\",\n    mode: \"date\",\n    onChange: function onChange(Event, selectedDate) {\n      var currentDate = selectedDate || dateRequest;\n      setShowSolitacao(Platform.OS === \"ios\");\n      setDateDesignation(currentDate);\n      dispatch(actions.addDateRequest(selectedDate));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }), showDateDesig && React.createElement(DateTimePicker, {\n    testID: \"dateTimePickerDesignacao\",\n    value: dateDesignation,\n    is24Hour: true,\n    display: \"default\",\n    mode: \"date\",\n    onChange: function onChange(Event, selectedDate) {\n      var currentDate = selectedDate || dateDesignation;\n      setShowDateDesignacao(Platform.OS === \"ios\");\n      setDateRequest(currentDate);\n      dispatch(actions.addDateDesignation(selectedDate));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, React.createElement(BackArrowButton, {\n    title: \"Voltar\",\n    icone: \"arrow-left\",\n    onPress: previousStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }), React.createElement(NextArrowButton, {\n    title: \"Pr\\xF3ximo\",\n    icone: \"arrow-right\",\n    onPress: nextStep,\n    isValid: isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/mobile/app-react-native-report/src/components/Form/Steps/StepOneGeneralInformation/index.tsx"],"names":["React","useState","DateTimePicker","RectButton","useAuth","useNavigation","styles","Input","NextArrowButton","BackArrowButton","Select","typeInquerisOptions","orgaoSolicitanteOptions","directorsOptions","cities","naturezaExame","secao","formatEditDate","formatNewDate","inputIsValid","selectIsValid","actions","useDispatch","useSelector","StepOneGeneralInformation","dispatch","navigation","user","reportDataHeader","state","reportReducer","LaudoVeicular","Data","Cabecalho","currentStep","setCurrentStep","value","updateCurrentStep","rep","setRep","numberOffice","setNumberOffice","initiated","setInitiated","typeOfInquiry","setTypeOfInquiry","NumberInquiry","setNumberInquiry","city","setCity","director","setDirector","section","setSection","id","expert","setExpert","examNature","setExamNature","Date","dateDesignation","setDateDesignation","dateRequest","setDateRequest","requestingAgency","setRequestingAgency","modalVisible","setModalVisible","showDateDesig","setShowDateDesignacao","showDateSolit","setShowSolitacao","isValid","setValid","validateCity","setValidateCity","validateSection","setValidateSection","validateExamNature","setValidateExamNature","validateRequestingAgency","setValidateRequestingAgency","validateDirector","setValidateDirector","validateTypeInquery","setValidateTypeInquery","nextStep","Alert","alert","text","onPress","console","log","previousStep","style","navigate","showDesignacaoDatepicker","showSolicitanteDatepicker","Keyboard","dismiss","fields","String","Rep","repConvertNumber","Number","addRep","numberOfficeConvert","addNumberOffice","addInitiated","selectedValue","index","addTypeOfInquiry","addNumberInquiry","addCity","addSection","addExamNature","addRequestingAgency","addDirector","containerData","button","DataDeSolicitacao","data","DataDeDesignacao","Event","selectedDate","currentDate","Platform","OS","addDateRequest","addDateDesignation","footer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  Platform,\n  TouchableNativeFeedback,\n  Keyboard,\n  Alert,\n} from \"react-native\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport { useAuth } from \"../../../../hooks/auth\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport styles from \"./styles\";\n\nimport { Input } from \"../../../Inputs/Input\";\nimport { NextArrowButton } from \"../../../../components/Buttons/NextArrowButton\";\nimport { BackArrowButton } from \"../../../../components/Buttons/BackArrowButton\";\nimport { Select } from \"../../../Select\";\nimport {\n  typeInquerisOptions,\n  orgaoSolicitanteOptions,\n  directorsOptions,\n  cities,\n  naturezaExame,\n  secao,\n} from \"../../../../config/constants\";\n\nimport { formatEditDate, formatNewDate } from \"../../../../utils\";\nimport { maskRep } from \"../../../../utils/maks\";\nimport { inputIsValid, selectIsValid } from \"../../../../utils/validate\";\n\nimport actions from \"../../../../actions/todo\";\nimport type { RootState } from \"../../../../store/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport function StepOneGeneralInformation() {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n\n  const { user } = useAuth();\n\n  const reportDataHeader = useSelector((state: RootState) => {\n    return state.reportReducer.LaudoVeicular.Data.Cabecalho;\n  });\n\n  const currentStep = useSelector(\n    (state: RootState) => state.reportReducer.currentStep\n  );\n\n  const setCurrentStep = (value: number) => {\n    dispatch(actions.updateCurrentStep(value));\n  };\n\n  const [rep, setRep] = useState(\"\");\n  const [numberOffice, setNumberOffice] = useState(\"\");\n  const [initiated, setInitiated] = useState(\"\");\n  const [typeOfInquiry, setTypeOfInquiry] = useState(0);\n  const [NumberInquiry, setNumberInquiry] = useState(\"\");\n  const [city, setCity] = useState(0);\n  const [director, setDirector] = useState(0);\n  const [section, setSection] = useState(0);\n  const [expert, setExpert] = useState(user.id);\n  const [examNature, setExamNature] = useState(0);\n  const [dateDesignation, setDateDesignation] = useState(new Date());\n  const [dateRequest, setDateRequest] = useState(new Date());\n  const [requestingAgency, setRequestingAgency] = useState(0);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [showDateDesig, setShowDateDesignacao] = useState(false);\n  const [showDateSolit, setShowSolitacao] = useState(false);\n  const [isValid, setValid] = useState(true);\n  const [validateCity, setValidateCity] = useState(false);\n  const [validateSection, setValidateSection] = useState(false);\n  const [validateExamNature, setValidateExamNature] = useState(false);\n  const [validateRequestingAgency, setValidateRequestingAgency] =\n    useState(false);\n  const [validateDirector, setValidateDirector] = useState(false);\n  const [validateTypeInquery, setValidateTypeInquery] = useState(false);\n\n  const nextStep = () => {\n    if (\n      (rep && numberOffice && initiated !== \"\") ||\n      (typeOfInquiry &&\n        city &&\n        director &&\n        section &&\n        examNature &&\n        requestingAgency !== 0 &&\n        isValid)\n    ) {\n      setCurrentStep(2);\n    } else {\n      Alert.alert(\n        \"Ops, informações inválidas!\",\n        \"Verique se preencheu todas as informações desta etapa corretamente.\",\n        [{ text: \"OK\", onPress: () => console.log(\"OK Pressed\") }]\n      );\n    }\n  };\n\n  const previousStep = () => {\n    Alert.alert(\n      \"Tem certeza que seja encerrar o formulário?\",\n      \"Será redirecionado para tela inicial.\",\n      [\n        {\n          text: \"Cancelar\",\n          style: \"cancel\",\n        },\n        {\n          text: \"Não\",\n        },\n        {\n          text: \"Sim\",\n          onPress: async () => {\n            navigation.navigate(\"VehicleSelect\");\n          },\n        },\n      ]\n    );\n  };\n\n  const showDesignacaoDatepicker = () => {\n    setShowDateDesignacao(true);\n  };\n  const showSolicitanteDatepicker = () => {\n    setShowSolitacao(true);\n  };\n\n  return (\n    <TouchableNativeFeedback onPress={Keyboard.dismiss}>\n      <>\n        <View style={styles.fields}>\n          <Input\n            placeholder=\"Rep (xxxx) *\"\n            error={inputIsValid(rep)}\n            errorMessage={\"Erro: o formato deve ser: Rep (xxxx)\"}\n            value={String(reportDataHeader.Rep)}\n            onChangeText={(value) => {\n              const repConvertNumber = Number(value);\n              setRep(value);\n              dispatch(actions.addRep(repConvertNumber));\n              //// setValid(inputIsValid(rep));\n            }}\n            testID=\"input-rep\"\n            keyboardType=\"numeric\"\n          />\n\n          <Input\n            placeholder=\"Ofício **\"\n            errorMessage={\"Erro: o número do Ofício é obrigatório\"}\n            error={inputIsValid(numberOffice)}\n            onChangeText={(value) => {\n              const numberOfficeConvert = Number(value);\n              setNumberOffice(value);\n              dispatch(actions.addNumberOffice(numberOfficeConvert));\n              //// setValid(inputIsValid(numberOffice));\n            }}\n            value={String(numberOffice)}\n            keyboardType=\"numeric\"\n            testID=\"input-office\"\n          />\n\n          <Input\n            placeholder=\"Indiciado\"\n            errorMessage={\"Erro: preencha o nome  do indiciado\"}\n            error={inputIsValid(initiated)}\n            autoCapitalize={\"words\"}\n            onChangeText={(value) => {\n              setInitiated(value);\n              dispatch(actions.addInitiated(value));\n              // setValid(inputIsValid(initiated));\n            }}\n            value={initiated}\n          />\n\n          <Select\n            onValueChange={(selectedValue, index) => {\n              setTypeOfInquiry(index);\n              dispatch(actions.addTypeOfInquiry(index));\n              setValidateTypeInquery(selectIsValid(index));\n            }}\n            options={typeInquerisOptions}\n            value={typeOfInquiry}\n            error={validateTypeInquery}\n            errorMessage={\"Erro: Selecione o Tipo de Inquerito\"}\n            testID=\"select-typeOfInquery\"\n          />\n\n          <Input\n            placeholder=\"Inquerito\"\n            error={inputIsValid(NumberInquiry)}\n            errorMessage={\"Erro: preencha o número do Inquerito\"}\n            onChangeText={(value) => {\n              setNumberInquiry(value);\n              dispatch(actions.addNumberInquiry(Number(value)));\n              // setValid(inputIsValid(NumberInquiry));\n            }}\n            value={String(NumberInquiry)}\n            keyboardType=\"numeric\"\n          />\n\n          <Select\n            onValueChange={(selectedValue, index) => {\n              setCity(index);\n              dispatch(actions.addCity(index));\n              setValidateCity(selectIsValid(index));\n            }}\n            options={cities}\n            value={city}\n            error={validateCity}\n            errorMessage={\"Erro: Selecione uma Cidade\"}\n            testID=\"select-city\"\n          />\n\n          <Select\n            onValueChange={(selectedValue, index) => {\n              setSection(index);\n              dispatch(actions.addSection(index));\n              setValidateSection(selectIsValid(index));\n            }}\n            options={secao}\n            value={section}\n            error={validateSection}\n            errorMessage={\"Erro: Selecione uma Seção\"}\n            testID=\"select-section\"\n          />\n\n          <Select\n            onValueChange={(selectedValue, index) => {\n              setExamNature(index);\n              dispatch(actions.addExamNature(index));\n              setValidateExamNature(selectIsValid(index));\n            }}\n            options={naturezaExame}\n            value={examNature}\n            error={validateExamNature}\n            errorMessage={\"Erro: Selecione a Natureza de Exame\"}\n            testID=\"select-natureExam\"\n          />\n\n          <Select\n            onValueChange={(selectedValue, index) => {\n              setRequestingAgency(index);\n              dispatch(actions.addRequestingAgency(index));\n              setValidateRequestingAgency(selectIsValid(index));\n            }}\n            options={orgaoSolicitanteOptions}\n            value={requestingAgency}\n            error={validateRequestingAgency}\n            errorMessage={\"Erro: Selecione um Órgão Solicitante\"}\n            testID=\"select-typeRequestingAgency\"\n          />\n\n          <Select\n            onValueChange={(selectedValue, index) => {\n              setDirector(index);\n              dispatch(actions.addDirector(index));\n              setValidateDirector(selectIsValid(index));\n            }}\n            options={directorsOptions}\n            value={director}\n            error={validateDirector}\n            errorMessage={\"Erro: Selecione um Diretor\"}\n            testID=\"select-director\"\n          />\n          <View style={styles.containerData}>\n            <RectButton\n              style={styles.button}\n              onPress={showSolicitanteDatepicker}\n            >\n              {typeof reportDataHeader.DataDeSolicitacao === \"string\" ? (\n                <Text style={styles.data}>\n                  {formatEditDate(reportDataHeader.DataDeSolicitacao)}\n                </Text>\n              ) : (\n                <Text style={styles.data}>\n                  {formatNewDate(reportDataHeader.DataDeSolicitacao)}\n                </Text>\n              )}\n            </RectButton>\n          </View>\n          <View style={styles.containerData}>\n            <RectButton\n              style={styles.button}\n              onPress={showDesignacaoDatepicker}\n            >\n              <Text style={styles.data}>\n                {formatNewDate(reportDataHeader.DataDeDesignacao)}\n              </Text>\n            </RectButton>\n          </View>\n\n          {showDateSolit && (\n            <DateTimePicker\n              testID=\"dateTimePickerSolicitacao\"\n              value={dateRequest}\n              is24Hour={true}\n              display=\"default\"\n              mode=\"date\"\n              onChange={(Event: any, selectedDate: any) => {\n                const currentDate = selectedDate || dateRequest;\n                setShowSolitacao(Platform.OS === \"ios\");\n                setDateDesignation(currentDate);\n                dispatch(actions.addDateRequest(selectedDate));\n              }}\n            />\n          )}\n\n          {showDateDesig && (\n            <DateTimePicker\n              testID=\"dateTimePickerDesignacao\"\n              value={dateDesignation}\n              is24Hour={true}\n              display=\"default\"\n              mode=\"date\"\n              onChange={(Event: any, selectedDate: any) => {\n                const currentDate = selectedDate || dateDesignation;\n                setShowDateDesignacao(Platform.OS === \"ios\");\n                setDateRequest(currentDate);\n                dispatch(actions.addDateDesignation(selectedDate));\n              }}\n            />\n          )}\n        </View>\n        <View style={styles.footer}>\n          <BackArrowButton\n            title=\"Voltar\"\n            icone=\"arrow-left\"\n            onPress={previousStep}\n          />\n          <NextArrowButton\n            title=\"Próximo\"\n            icone=\"arrow-right\"\n            onPress={nextStep}\n            isValid={isValid}\n          />\n        </View>\n      </>\n    </TouchableNativeFeedback>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}